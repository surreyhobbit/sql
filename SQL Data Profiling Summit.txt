-- Profiling Stammdaten Summit

--***************Derivate "Asset-Based"****************************************************************

--Ausprägungen Klassifizierung:
--Cap
--Floor
--Collar
--Zinsswap/Zinswährungsswap
--Portfolio CDS
--Single Name CDS
--Finanzgarantie

select * from 
(
select case
		   when 
		    env.dmownertable = 'CAPTR'
		    and env.DESK = 'DERIVATIVE'
		    and ast.type = 'IRG'
		    and ast.subtype = 'CAP'
		   then 'Cap'
		   when
		    env.dmownertable = 'CAPTR'
		    and env.DESK = 'DERIVATIVE'
		    and ast.type = 'IRG'
		    and ast.subtype = 'FLOOR'
		   then 'Floor'
		   when
		    env.dmownertable = 'CAPTR'
		    and env.DESK = 'DERIVATIVE'
		    and ast.type = 'IRG'
		    and ast.subtype not in ('CAP', 'FLOOR')
		   then 'Collar'
		   when
		    (env.dmownertable in ('SWAP', 'EXOTIC')
		    and env.DESK = 'DERIVATIVE'
		    and env.book = 'DERIVATE')
		    or
		    (env.dmownertable in ('SWAP', 'EXOTIC')
		    and env.DESK = 'K'
		    and env.book = 'K_DERIVATE')
		   then 'Zinsswap/Zinswährungsswap'
		   when
		    env.dmownertable = 'EXOTIC'
		    and env.DESK = 'KV_DERIVATE'
		    and env.book = 'POOL_CDS'
		   then 'Portfolio CDS'
		   when
		    env.dmownertable = 'EXOTIC'
		    and env.DESK = 'KV_DERIVATE'
		    and env.book = 'SINGLE_CDS'
		   then 'Single Name CDS'
		   when
		    env.dmownertable = 'EXOTIC'
		    and env.DESK = 'KV_DERIVATE'
		    and env.book = 'FINGAR_CDS'
		   then 'Finanzgarantie'
		   else ''
	   end as klassifizierung, 
	   env.tradeid, 
	   env.dmownertable, 
	   env.desk, 
	   env.book, 
	   env.cdmhaltekategorie, 
	   env.tradedate,
	   env.structureid, 
	   ast.dmassetid, 
	   ast.type, 
	   ast.subtype, 
	   ast.ccy, 
	   ast.effdate, 
	   ast.matdate, 
	   ast.interest_basis, 
	   ast.pors, 
	   ast.interest_fixfloat,
	   cdo.transactionid
	   --azg.OE_ABT_FFC_ID,
from dmenv env 

left outer join dmasset ast
on ast.dmownertable = env.dmownertable
and ast.tradeid = env.tradeid
and ast.audit_version = env.audit_version
--left outer join AZG0005 azg
--on azg.OWNER_TABLE = ast.dmownertable
--and azg.TRADE_ID = ast.tradeid 

left outer join	
(
select oiss.tradeid, pool.transactionid from cdmcdoiss oiss
inner join cdmCDOpool pool
on pool.transactionid = oiss.transactionid
and pool.audit_version = oiss.audit_version
where pool.audit_authorized = 'Y'
and pool.audit_entitystate not in ('PEND','DONE')
and oiss.tradeid <> ' '
) cdo
on cdo.tradeid = ast.tradeid

where env.audit_authorized = 'Y'
and env.audit_entitystate not in ('PEND','DONE')
order by env.tradeId
) prod

where prod.klassifizierung is not null;



--***************Derivate "FX-Geschäfte"****************************************************************

--Ausprägungen Klassifizierung:
--Devisenswap
--Kassa
--Termin

select * from 
(
select case
	   	   when 
		    env.dmownertable = 'FXSWAP'
		   then 'Devisenswap'
		   when
		    env.dmownertable = 'FXSPOT'
		   then 'Kassa'
		   when
		    env.dmownertable = 'FXFWD'
		   then 'Termin'
		   else ''
	   end as klassifizierung, 
	   env.tradeid, 
	   env.dmownertable, 
	   env.book,
	   env.cdmhaltekategorie, 
	   env.tradedate,
	   env.CDMFXVERWZWECK,
	   env.structureid,
	   fx.spotdate,
	   fx.valdate,
	   fx.xrate,
	   fx.spotrate,
	   fx.fwdsoldamt,
	   fx.boughtamt,
	   fx.pors, 
	   fx.soldccy,
	   fx.boughtccy
	   --azg.OE_ABT_FFC_ID,
from dmenv env

left outer join dmforex fx
on fx.dmownertable = env.dmownertable
and fx.tradeid = env.tradeid
and fx.audit_version = env.audit_version

--left outer join AZG0005 azg
--on azg.OWNER_TABLE = ast.dmownertable
--and azg.TRADE_ID = ast.tradeid

where env.audit_authorized = 'Y'
and env.audit_entitystate not in ('PEND','DONE')
order by env.tradeId
) prod

where prod.klassifizierung is not null

;

--***************Geldmarkt/Darlehen "Asset-Based"****************************************************************

--Ausprägungen Klassifizierung:
--Tagesgeld
--Termingeld
--Tagesgeld b.a.w.
--Sec Lending
--Sell/Buy Back
--Buy/Sell Back
--Repo
--Reverse Repo
--Spitzenrefinanzierungsfazilität mit Zentralbanken
--Wertpapierpensionsgeschäft mit Zentralbanken
--Cash Collateral


select * from 
(
select case
	   	   when 
		    (env.dmownertable = 'MM'
			and env.DESK = 'GELDMARKT'
			and env.book = 'TAGESGELDER'
			and ast.mmtype in ('DEPOSIT', 'LOAN'))
			or
			(env.dmownertable = 'MM'
			and env.DESK = 'INTGESCH'
			and env.book = 'INTTAGES'
			and ast.mmtype in ('CDEPO', 'CLOAN'))
		   then 'Tagesgeld'
		   when
		    (env.dmownertable = 'MM'
			and env.DESK = 'GELDMARKT'
			and env.book = 'TERMINGELDER'
			and ast.mmtype in ('DEPOSIT', 'LOAN'))
			or
			(env.dmownertable = 'MM'
			and env.DESK = 'INTGESCH'
			and env.book = 'INTTERMIN'
			and ast.mmtype in ('DEPOSIT', 'LOAN'))
		   then 'Termingeld'
		   when
		    env.dmownertable = 'MM'
			and env.DESK = 'GELDMARKT'
			and env.book = 'TAGESGELDER'
			and ast.mmtype in ('CDEPO', 'CLOAN')
		   then 'Tagesgeld b.a.w.'
		   when
		    env.dmownertable = 'REPO_TR'
			and env.DESK = 'GELDMARKT'
			and env.book = 'WP_LEIHE'
			and rep.reptype = 'SECL'
		   then 'Sec Lending'
		   when
		    env.dmownertable = 'REPO_TR'
			and env.DESK = 'GELDMARKT'
			and env.book = 'REPO'
			and rep.reptype = 'SBBK'
		   then 'Sell/Buy Back'
		   when
		    env.dmownertable = 'REPO_TR'
			and env.DESK = 'GELDMARKT'
			and env.book = 'REPO'
			and rep.reptype = 'BSBK'
		   then 'Buy/Sell Back'
		   when
		    env.dmownertable = 'REPO_TR'
			and env.DESK = 'GELDMARKT'
			and env.book = 'REPO'
			and rep.reptype = 'REPO'
		   then 'Repo'
		   when
		    (env.dmownertable = 'REPO_TR'
			and env.DESK = 'GELDMARKT'
			and env.book = 'REPO'
			and rep.reptype = 'REV'
			and rep.repomkttype = ' ')
			or
			(env.dmownertable = 'REPO_TR'
			and env.DESK = 'GELDMARKT'
			and env.book = 'REPO'
			and rep.reptype = 'REV'
			and rep.repomkttype = 'TRIPARTY')
		   then 'Reverse Repo'
		   when
		    env.dmownertable = 'REPO_TR'
			and env.DESK = 'GELDMARKT'
			and env.book = 'REPO'
			and rep.reptype = 'NOCL'
			and rep.repomkttype = 'CBK'
		   then 'Spitzenrefinanzierungsfazilität mit Zentralbanken'
		   when
		    env.dmownertable = 'REPO_TR'
			and env.DESK = 'GELDMARKT'
			and env.book = 'REPO'
			and rep.reptype = 'NOCL'
			and rep.repomkttype = 'CBKT'
		   then 'Wertpapierpensionsgeschäft mit Zentralbanken'
		   when
		    env.dmownertable = 'REPO_TR'
			and env.DESK = 'PORTFOLIO'
			and env.book = 'SICHERHEITEN'
			and rep.reptype = 'CMNC'
		   then 'Cash Collateral'
		   else ''
	   end as klassifizierung, 
	   env.tradeid,
	   env.dmownertable, 
	   env.desk, 
	   env.book,
	   env.cdmLiquiPort,
	   env.cdmhaltekategorie, 
	   ast.dmassetid,  
	   ast.mmtype,
	   ast.ccy, 
	   ast.effdate, 
	   ast.matdate, 
	   ast.interest_basis, 
	   ast.pors, 
	   ast.interest_fixfloat,
	   rep.reptype,
	   rep.repomkttype
	   --sfloat.sEVTYP,
	   --sfloat.sFLTYPE,
	   --azg.OE_ABT_FFC_ID,
from dmenv env

left outer join dmasset ast
on ast.dmownertable = env.dmownertable
and ast.tradeid = env.tradeid
and ast.audit_version = env.audit_version

left outer join dmrepo rep
on rep.tradeid = ast.tradeid
and rep.audit_version = ast.audit_version

--left outer join AZG0005 azg
--on azg.OWNER_TABLE = ast.dmownertable
--and azg.TRADE_ID = ast.tradeid

where env.audit_authorized = 'Y'
and env.audit_entitystate not in ('PEND','DONE')
order by env.tradeId
) prod

where prod.klassifizierung is not null

;
--*************** Optionen ****************************************************************

--Ausprägungen Klassifizierung:
--Swaption
--Zinsoption

select * from 
(
select case
	   	   when 
		    env.dmownertable = 'SWAPTION'
			and env.DESK = 'DERIVATIVE'
			and env.book = 'DERIVATE'
			and env.structureid = ' '
		   then 'Swaption'
		   when
		    env.dmownertable = 'CAPTR'
			and env.DESK = 'DERIVATIVE'
			and env.book = 'DERIVATE'
			and env.structureid = ' '
		   then 'Zinsoption'
		   else ''
	   end as klassifizierung, 
	   env.tradeid, 
	   env.dmownertable, 
	   env.desk,
	   env.book,
	   env.cdmhaltekategorie, 
	   env.tradedate,
	   opt.expdate,
	   opt.pors,
	   opt.notccy,
	   opt.StkCcy,
	   opt.style,
	   opt.underlying,
	   opt.strike,
	   opt.SettleData_StlMode,
	   opt.PremData_Premium,
	   opt.PremData_Ccy,
	   opt.PremData_Date,
	   opt.porc,
	   opt.SETTLEDATA_PARTEXER
	   --azg.OE_ABT_FFC_ID,
from dmenv env

left outer join dmoption opt
on opt.dmownertable = env.dmownertable
and opt.tradeid = env.tradeid
and opt.audit_version = env.audit_version

--left outer join AZG0005 azg
--on azg.OWNER_TABLE = opt.dmownertable
--and azg.TRADE_ID = opt.tradeid

where env.audit_authorized = 'Y'
and env.audit_entitystate not in ('PEND','DONE')
order by env.tradeId
) prod

where prod.klassifizierung is not null

;

--*************** Wertpapiere / Bonds ****************************************************************

--Ausprägungen Klassifizierung:
--Eigene WP
--Fremde WP
--Schuldscheindarlehen

--select * from 
--(
select --klassifizierung, --> Klassifizierung ist noch offen
	   env.dmOwnertable,
       env.tradeId,
	   env.tradedate,
	   env.cdmliquiport,
	   env.producttype,
	   env.cdmhaltekategorie,
	   env.tradestatus,
	   env.audit_entitystate,
	   env.company,
	   env.book,
	   env.desk,
	   bond.sectype,
	   bond.ccy,
	   secast.sec,
	   secast.type,
	   secast.subtype,
	   secast.productname,
	   secast.cdmtrennungspflicht,
	   secast.CDMSECEFFDATE,
	   secast.cdmsecmatdate,
	   secast.issuer,
	   secast.issueprice,
	   secast.sizeissue,
	   secast.EXTERNALSOURCE,
	   secast.CDMCBOERSENNOTIERT,
	   secast.CDMBOERSENFAEHIG,
	   secast.CDMNOTENBANKF,
	   secast.PRICEFORMULA,
	   secast.LFORMAT_PRICEFORM_UNITS,
	   secast.REDEMPTIONPRICE,
	   secast.STEPDEBT,
	   secast.ccy,
	   secast.CDMGEWAEHRGEBER,
	   secast.CDMSTUFENZINS,
	   secast.CDMVERBRASSETCLASS,
	   secast.CDMVERBRASSETREGION,
	   secast.dmAssetId,
	   secast.interest_basis,
	   secast.Sched_Pay_Cal,
	   secast.effdate,
	   secast.matdate,
	   secast.interest_fixfloat,
	   --sfloat.sEVTYP,
	   --sfloat.sFLTYPE,
	   secast.pors,
	   cdo.transactionid
	   --azg.OE_ABT_FFC_ID,
from dmEnv env

left outer join dmBond bond
on env.tradeId = bond.tradeId
and env.audit_version = bond.audit_version

left outer join 
(
select sec.audit_action,
	   sec.audit_ishistory,		 
	   sec.sec,
	   sec.type,
	   sec.subtype,
	   sec.productname,
	   sec.cdmtrennungspflicht,
	   sec.CDMSECEFFDATE,
	   sec.cdmsecmatdate,
	   sec.issuer,
	   sec.issueprice,
	   sec.sizeissue,
	   sec.EXTERNALSOURCE,
	   sec.CDMCBOERSENNOTIERT,
	   sec.CDMBOERSENFAEHIG,
	   sec.CDMNOTENBANKF,
	   sec.PRICEFORMULA,
	   sec.LFORMAT_PRICEFORM_UNITS,
	   sec.REDEMPTIONPRICE,
	   sec.STEPDEBT,
	   sec.ccy,
	   sec.CDMGEWAEHRGEBER,
	   sec.CDMSTUFENZINS,
	   sec.CDMVERBRASSETCLASS,
	   sec.CDMVERBRASSETREGION,
	   sast.dmAssetId,
	   sast.interest_basis,
	   sast.Sched_Pay_Cal,
	   sast.effdate,
	   sast.matdate,
	   sast.interest_fixfloat,
	   sast.pors
	   --sfloat.sEVTYP,
	   --sfloat.sFLTYPE,
from dmSec sec

inner join dmSAsset sast
on sast.dmAssetId = sec.dmAssetId
and sast.audit_version = sec.audit_version

where sec.audit_current = 'Y' 
and sec.audit_entitystate not in ('PEND','DONE')
) secast
on secast.sec = bond.sec

left outer join 
(
select iss.secid,
	   pool.transactionid 
from cdmcdoiss iss

inner join cdmCDOpool pool
on pool.transactionid = iss.transactionid
and pool.audit_version = iss.audit_version

where pool.audit_authorized = 'Y'
and pool.audit_entitystate not in ('PEND','DONE')
and iss.secid <> ' '
) cdo
on cdo.secid = secast.sec

where env.dmOwnertable = 'BOND_TR'  
and env.audit_authorized = 'Y'
and env.audit_entitystate not in ('PEND','DONE')
and env.desk not in ('BEWERT','INTGESCH')
and bond.bondMktType not in  ('DEPTRN')
order by env.tradeId
--) prod

--where prod.klassifizierung is not null
;


